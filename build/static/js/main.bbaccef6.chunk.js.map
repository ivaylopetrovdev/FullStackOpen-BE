{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","components/App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","put","Filter","props","react_default","a","createElement","value","onChange","PersonForm","_props$actions","actions","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Person","_ref","name","number","removePerson","onClick","window","confirm","removePersonById","Persons","persons","filterName","filter","p","toLowerCase","search","map","_ref2","components_Person","key","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilterName","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","notificationType","setNotificationType","trigggerNotification","setTimeout","useEffect","personsService","allPersons","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","userExists","person","length","updatedPerson","objectSpread","returnedPerson","catch","update","components_Persons","ReactDOM","render","components_App","document","getElementById"],"mappings":"6NACMA,EAAU,eAsBDC,EApBA,WAEX,OADgBC,IAAMC,IAAIH,GACXI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAkB9BL,EAfA,SAAAM,GAEX,OADgBL,IAAMM,KAAKR,EAASO,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa9BL,EAVI,SAAAQ,GAEf,OADgBP,IAAMQ,OAAN,GAAAC,OAAgBX,EAAhB,KAAAW,OAA2BF,IAC5BL,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ9BL,EALA,SAACQ,EAAIF,GAEhB,OADgBL,IAAMU,IAAN,GAAAD,OAAaX,EAAb,KAAAW,OAAwBF,GAAMF,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCZ9BO,EANA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,gCAAuBF,EAAAC,EAAAC,cAAA,SAAOC,MAAOJ,EAAMI,MAAOC,SAAUL,EAAMK,aCoB3DC,EAtBI,SAACN,GAAU,IAAAO,EAOtBP,EAAMQ,QALNC,EAFsBF,EAEtBE,UACAC,EAHsBH,EAGtBG,QACAC,EAJsBJ,EAItBI,UACAC,EALsBL,EAKtBK,iBACAC,EANsBN,EAMtBM,mBAGJ,OACIZ,EAAAC,EAAAC,cAAA,QAAMW,SAAUL,GACZR,EAAAC,EAAAC,cAAA,oBACUF,EAAAC,EAAAC,cAAA,SAAOC,MAAOM,EAASL,SAAUO,KAE3CX,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,SAAOC,MAAOO,EAAWN,SAAUQ,KAChDZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQY,KAAK,UAAb,UCADC,EAhBA,SAAAC,GAAsC,IAApCC,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,OAAQxB,EAAsBsB,EAAtBtB,GAAIyB,EAAkBH,EAAlBG,aAO/B,OACInB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKe,GACLjB,EAAAC,EAAAC,cAAA,UAAKgB,GACLlB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQkB,QAAS,kBAVJ,WACrB,GAAIC,OAAOC,QAAP,UAAA1B,OAAyBqB,EAAzB,MACA,OAAOE,EAAazB,GAQO6B,KAAvB,aCGDC,EAbC,SAAAR,GAAyC,IAAvCS,EAAuCT,EAAvCS,QAASC,EAA8BV,EAA9BU,WAAYP,EAAkBH,EAAlBG,aACnC,OACInB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACCuB,EACIE,OAAO,SAAAC,GAAC,OAAIA,EAAEX,OAAmE,IAA3DW,EAAEX,KAAKY,cAAcC,OAAOJ,EAAWG,iBAC7DE,IAAI,SAAAC,GAAA,IAAEf,EAAFe,EAAEf,KAAMC,EAARc,EAAQd,OAAQxB,EAAhBsC,EAAgBtC,GAAhB,OAAwBM,EAAAC,EAAAC,cAAC+B,EAAD,CAAQhB,KAAMA,EAAMvB,GAAIA,EAAIwB,OAAQA,EAAQgB,IAAKxC,EAAIyB,aAAcA,SCKjGgB,EAZM,SAAAnB,GAAuB,IAApBoB,EAAoBpB,EAApBoB,QAAStB,EAAWE,EAAXF,KAC7B,OAAgB,OAAZsB,EACO,KAIPpC,EAAAC,EAAAC,cAAA,OAAKmC,UAAWvB,GACXsB,IC0GEE,SA3GH,WAAM,IAAAC,EACgBC,mBAAS,IADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPd,EADOgB,EAAA,GACEG,EADFH,EAAA,GAAAI,EAEgBL,mBAAS,IAFzBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEPpC,EAFOqC,EAAA,GAEEC,EAFFD,EAAA,GAAAE,EAGoBR,mBAAS,IAH7BS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGPtC,EAHOuC,EAAA,GAGIC,EAHJD,EAAA,GAAAE,EAIyBX,mBAAS,IAJlCY,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAIPzB,EAJO0B,EAAA,GAIKC,EAJLD,EAAA,GAAAE,EAK0Bd,mBAAS,MALnCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAKPE,EALOD,EAAA,GAKOE,EALPF,EAAA,GAAAG,EAMkClB,mBAAS,MAN3CmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAMPE,EANOD,EAAA,GAMWE,EANXF,EAAA,GA4BRG,EAAuB,SAAC1B,EAAStB,GACnC2C,EAAgBrB,GAChByB,EAAoB/C,GACpBiD,WAAW,WACPN,EAAgB,OACjB,MAqDP,OARAO,oBAAU,WACNC,IAEK5E,KAAK,SAAA6E,GACFtB,EAAWsB,MAEpB,IAGClE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACiE,EAAD,CAAc/B,QAASoB,EAAc1C,KAAM8C,IAC3C5D,EAAAC,EAAAC,cAACkE,EAAD,CAAQjE,MAAOuB,EAAYtB,SA1EJ,SAACiE,GAC5BhB,EAAiBgB,EAAMC,OAAOnE,UA0E1BH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACqE,EAAD,CAAYhE,QAAS,CACjBC,UAzCM,SAAC6D,GACfA,EAAMG,iBACN,IAAMC,EAAahD,EAAQE,OAAO,SAAA+C,GAAM,OAAIA,EAAOzD,OAASR,IAE5D,GAAGgE,EAAWE,OACV,OAAItD,OAAOC,QAAP,GAAA1B,OAAkBa,EAAlB,2EArBG,SAACiE,GACZ,IAAME,EAAalC,OAAAmC,EAAA,EAAAnC,CAAA,GAAOgC,EAAP,CAAexD,OAAQR,IAC1CuD,EACYW,EAAclF,GAAIkF,GACzBvF,KAAK,SAAAyF,GACFhB,EAAoB,uBAAAlE,OAAwBkF,EAAe7D,KAAvC,KAAgD,WACpE2B,EAAWnB,EAAQM,IAAI,SAAA2C,GAAM,OAAIA,EAAOhF,KAAOoF,EAAepF,GAAKgF,EAASI,KAC5E/B,EAAW,IACXG,EAAa,MAEhB6B,MAAM,WACHjB,EAAoB,mBAAAlE,OAAoBgF,EAAc3D,KAAlC,0CAAgF,SACpG2B,EAAWnB,EAAQE,OAAO,SAAA+C,GAAM,OAAIA,EAAOhF,KAAOkF,EAAclF,QAUzDsF,CAAOP,EAAW,SAE7B,EAQJR,EALkB,CACdhD,KAAMR,EACNS,OAAQR,IAKPrB,KAAK,SAAAyF,GACFhB,EAAoB,UAAAlE,OAAWkF,EAAe7D,KAA1B,KAAmC,WACvD2B,EAAWnB,EAAQ7B,OAAOkF,IAC1B/B,EAAW,IACXG,EAAa,OAoBbzC,UACAC,YACAC,iBAxFa,SAAC0D,GACtBtB,EAAWsB,EAAMC,OAAOnE,QAwFhBS,mBArFe,SAACyD,GACxBnB,EAAamB,EAAMC,OAAOnE,WAuFtBH,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAC+E,EAAD,CAASxD,QAASA,EAASC,WAAYA,EAAYP,aAlFtC,SAACzB,GAClBuE,EACgBvE,GACXL,KAAK,WACFuD,EAAWnB,EAAQE,OAAO,SAAC+C,GAAD,OAAYA,EAAOhF,KAAOA,aC5BpEwF,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.bbaccef6.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n};\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n};\n\nconst deleteById = id => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n\nexport default {\n    getAll,\n    create,\n    deleteById,\n    update\n}\n","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>filter shown with <input value={props.value} onChange={props.onChange}/></div>\n    )\n};\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n    const {\n        addPerson,\n        newName,\n        newNumber,\n        handleNameChange,\n        handleNumberChange\n    } = props.actions;\n\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n};\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({name, number, id, removePerson}) => {\n    const removePersonById = () => {\n        if (window.confirm(`Delete ${name}?`)) {\n            return removePerson(id);\n        }\n    };\n\n    return (\n        <tr>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td><button onClick={() => removePersonById()}>delete</button></td>\n        </tr>\n    )\n};\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, filterName, removePerson}) => {\n    return (\n        <table>\n            <tbody>\n            {persons\n                .filter(p => p.name && p.name.toLowerCase().search(filterName.toLowerCase()) !== -1)\n                .map(({name, number, id}) => <Person name={name} id={id} number={number} key={id} removePerson={removePerson} />)\n            }\n            </tbody>\n        </table>\n    )\n};\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={type}>\n            {message}\n        </div>\n    )\n};\n\nexport default Notification\n","import React, { useState, useEffect } from 'react';\nimport personsService from '../services/persons'\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport Notification from './Notification';\nimport '../index.css'\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filterName, setNewFilterName] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [notificationType, setNotificationType] = useState(null);\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    };\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    };\n\n    const handleFilterNameChange = (event) => {\n        setNewFilterName(event.target.value)\n    };\n\n    const removePerson = (id) => {\n        personsService\n            .deleteById(id)\n            .then(() => {\n                setPersons(persons.filter((person) => person.id !== id));\n            })\n    };\n\n    const trigggerNotification = (message, type) => {\n        setErrorMessage(message);\n        setNotificationType(type);\n        setTimeout(() => {\n            setErrorMessage(null)\n        }, 5000);\n    };\n\n    const update = (person) => {\n        const updatedPerson = {...person, number: newNumber};\n        personsService\n            .update(updatedPerson.id, updatedPerson)\n            .then(returnedPerson => {\n                trigggerNotification(`Number changed for '${returnedPerson.name}'`, 'success');\n                setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson));\n                setNewName('');\n                setNewNumber('');\n            })\n            .catch(() => {\n                trigggerNotification(`Information of '${updatedPerson.name}' has already been removed from server`, 'error');\n                setPersons(persons.filter(person => person.id !== updatedPerson.id));\n            })\n    };\n\n    const addPerson = (event) => {\n        event.preventDefault();\n        const userExists = persons.filter(person => person.name === newName);\n\n        if(userExists.length) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                return update(userExists[0]);\n            }\n            return;\n        }\n\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        };\n\n        personsService\n            .create(newPerson)\n            .then(returnedPerson => {\n                trigggerNotification(`Added '${returnedPerson.name}'`, 'success');\n                setPersons(persons.concat(returnedPerson));\n                setNewName('');\n                setNewNumber('');\n            })\n    };\n\n    useEffect(() => {\n        personsService\n            .getAll()\n            .then(allPersons => {\n                setPersons(allPersons)\n            })\n    }, []);\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={errorMessage} type={notificationType} />\n            <Filter value={filterName} onChange={handleFilterNameChange} />\n            <h3>add a new</h3>\n            <PersonForm actions={{\n                addPerson,\n                newName,\n                newNumber,\n                handleNameChange,\n                handleNumberChange\n            }} />\n\n            <h3>Numbers</h3>\n\n            <Persons persons={persons} filterName={filterName} removePerson={removePerson} />\n        </div>\n    )\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}